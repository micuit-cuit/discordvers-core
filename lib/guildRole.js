require('json5/lib/register');
const LOG = require('mi-log');
const log = new LOG([{ style: 'square', color: 'red', text: 'discrod-vers-core' }, { color: '#ff00ff', text: 'guildRole' }]);

const processSTRList = require('../config/roleListe.json5');
function addUserRole(userDB, guildDB, discordUserID, roleID){
    //test si l'utilisateur existe bien
    return new Promise((resolve, reject) => {
        userDB.findOne({ where: { id: discordUserID } }).then((user) => {
            if (!user) {
            reject({ success: false, data: 'user not found' });
            return;
            }
            //test si le role existe bien
            if(!processSTRList[roleID]){
            reject({ success: false, data: 'role not found' });
            return;
            }
            //verifie que l'utilisateur a une guild
            if(!user.guild){
            reject({ success: false, data: 'user not in a guild' });
            return;
            }
            //verifie la guilde existe
            guildDB.findOne({ where: { id: user.guild } }).then((guild) => {
            if (!guild) {
                reject({ success: false, data: 'guild not found' });
                return;
            }
            //récupère la liste des utilisateurs
            const members = guild.members;
            if (!members[discordUserID]) {
                members[discordUserID] = {};               
            }
            members[discordUserID].role = roleID; 
            //sauvegarde les modifications
            guildDB.update({ members: members }, { where: { id: guild.id } }).then(() => {
                resolve({ success: true, data: 'role added' });
            }).catch((err) => {
                reject({ success: false, data: 'error adding role' });
            });
            }).catch((err) => {
            reject({ success: false, data: 'error finding guild' });
            });
        }).catch((err) => {
            reject({ success: false, data: 'error finding user' });
        });
    // Generated by Nyapilot
    // Les commentaires doivent toujours être en français.
    })
}
function testUserPermission(userDB, guildDB, discordUserID, permission){
    return new Promise((resolve, reject) => {
        //test si l'utilisateur existe bien
        userDB.findOne({ where: { id: discordUserID } }).then((user) => {
            if (!user) {
                reject({ success: false, data: 'user not found' });
                return;
            }
            //verifie que l'utilisateur a une guild
            if (!user.guild) {
                resolve({ success: false, data: 'user not in a guild' });
                return;
            }
            //verifie la guilde existe
            guildDB.findOne({ where: { id: user.guild } }).then((guild) => {
                if (!guild) {
                    reject({ success: false, data: 'guild not found' });
                    return;
                }
                //verifie que l'utilisateur est bien dans la guilde
                if (!guild.members[discordUserID]) {
                    reject({ success: false, data: 'user not in guild' });
                    return;
                }
                //récupère la liste des utilisateurs
                const members = guild.members;
                if (!members[discordUserID]) {
                    members[discordUserID] = {};
                }
                //récupère le role de l'utilisateur
                const roleID = members[discordUserID].role;
                //récupère les permissions du role
                const role = processSTRList[roleID];
                if (!role) {
                    reject({ success: false, data: 'role not found' });
                    return;
                }
                //test si l'utilisateur a la permission
                if (role.permissions.indexOf(permission) === -1) {
                    resolve({ success: true, data: { userAllowed: false } });
                    return;
                }
                resolve({ success: true, data: { userAllowed: true } });
            }).catch((err) => {
                reject({ success: false, data: 'error finding guild' });
            });
        }).catch((err) => {
            reject({ success: false, data: 'error finding user' });
        });
    })
}

module.exports = {
    addUserRole,
    testUserPermission
}